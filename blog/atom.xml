<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://cecilapp.github.io/the-butler/blog/</id>
  <title>Thợ Code - Blog</title>
  <subtitle><![CDATA[Tiếng nói của giai cấp Công nhân Lập trình]]></subtitle>
  <link href="https://cecilapp.github.io/the-butler/blog/atom.xml" rel="self" type="application/atom+xml" />
  <link href="https://cecilapp.github.io/the-butler/blog/" rel="alternate" type="text/html" />
  <updated>2022-02-06T03:27:02+01:00</updated>
  <author>
    <name>Thợ Code</name>
    <uri>https://cecilapp.github.io/the-butler/</uri>
  </author>
  <entry xml:lang="en">
    <id>https://cecilapp.github.io/the-butler/blog/trien-khai-giai-phap-nfts-marketplace-tren-ha-tang-aws-sieu-nhanh/</id>
    <title>Triển khai giải pháp NFTs Marketplace trên hạ tầng AWS siêu nhanh</title>
    <content type="html">
      <![CDATA[<!--StartFragment-->
<h2 id="bối-cảnh">Bối cảnh</h2>
<p>Để hòa mình cùng phong trào Cách mạng Công nghiệp lần thứ tư (tiếng Tây kêu bằng: The Fourth Industrial Revolution, 4IR, or Industry 4.0) và sự chuyển mình của Thế giới cũng như đề cao tinh thần đi tắt đón đầu, đi sau về trước và nhanh chóng <del>lùa gà</del> phổ cập NFTs để đưa nước ta sánh vai cùng các cường quốc năm châu.</p>
<p>Từ những lý do cấp thiết trên, tui đã quyết định tìm giải pháp nhanh để triển khai nhanh NFTs Marketplace trên hạ tầng AWS, sau khi vọc xong thấy đúng là nhanh thật, thậm chí còn siêu nhanh nữa.</p>
<!-- excerpt -->
<p>Sở dĩ lựa AWS (hay các cloud provider khác cũng thế) là tại vì mấy người không biết gì như tui giờ già cả rồi thời gian nghiên cứu không còn nhiều, sức khỏe thì yếu không khiêng nổi mấy con server 4U 8U nhét vô rack cao hơn đầu người rồi lọ mọ cả buổi trong cái phòng có mười mấy độ với độ ẩm 50% nổi nữa, thành ra cứ lên mây cho sướng. Thiên hạ hay nói ba cái chuyện mây mưa sướng lắm, thật là sướng thật!</p>
<p>OK, vậy chúng ta sẽ xài Ethereum Ropsten Testnet với sự giúp sức đắc lực của Amazon Managed Blockchain cùng với lủ khủ một mớ mấy cái services khác phụ họa như hình minh họa bên dưới. Tất cả những services này đều được khởi tạo bằng CloudFormation.</p>
<p><a href="https://raudangdat.files.wordpress.com/2022/01/nft-marketplace-aws-architecture.png"><img src="/assetsraudangdat.files.wordpress.com202201nft-marketplace-aws-architecture.f7cb97efde53e1abeacc6cb4bd0fbe26.png" alt="" loading="lazy" width="821" height="527" /></a></p>
<p>Hình của AWS Sample.</p>
<h2 id="bắt-đầu">Bắt đầu</h2>
<p>Kiểm tra phiên bản Nodejs, mấy phiên bản cũ quá không còn support hay gặp nhiều lỗi trời ơi đất hỡi lắm. Trên Ubuntu mặc định cài vô là bản 10.x, thành ra phải update hoặc lúc cài mới nhớ chú ý theo hướng dẫn này: <a href="https://thocode.net/blog/cai-dat-node-js-phien-ban-moi-nhat-tren-ubuntu-wsl2/"></a><a href="https://thocode.net/blog/cai-dat-node-js-phien-ban-moi-nhat-tren-ubuntu-wsl2/">https://thocode.net/blog/cai-dat-node-js-phien-ban-moi-nhat-tren-ubuntu-wsl2/</a></p>
<p><a href="https://raudangdat.files.wordpress.com/2022/01/cdk-nodejs-unsupport-version.png"><img src="/assetsraudangdat.files.wordpress.com202201cdk-nodejs-unsupport-version.bba5f5842671a686d7c2b5916e3af24c.png" alt="" loading="lazy" width="1053" height="300" /></a></p>
<p>CDK không chạy được với các phiên bản Nodejs cũ.</p>
<p>Clone source và install dependencies</p>
<p><code>git clone https://github.com/aws-samples/simple-nft-marketplace.git</code></p>
<p><code>npm install</code></p>
<h2 id="deploy-contract">Deploy Contract</h2>
<p>Mình sẽ xài hardhat để deploy contract ERC721 viết bằng Solidity lên Ethereum Ropsten Testnet. Coi thêm ở <a href="https://hardhat.org/"></a><a href="https://hardhat.org/">https://hardhat.org/</a> nếu bạn quan tâm, cơ bản thì hardhat là môi trường phát triển của Ethereum, cũng như muốn code Java thì phải JDK hay làm .NET thì phải có .NET Framework hay .NET SDK vậy.</p>
<p>Chạy lệnh trong thư mục /contract</p>
<p><code>npm install</code></p>
<p><code>npx hardhat compile</code></p>
<h3 id="chạy-thử-trên-localhost">Chạy thử trên localhost</h3>
<p>Mở 2 terminal để giả bộ rằng một cái là server, còn cái kia là client tương tác với server.</p>
<ul>
<li>Cái đầu, chạy lệnh:</li>
</ul>
<p><code>npx hardhat node</code></p>
<p>Thấy hiện ra 20 cái Account và Private Key mỗi cái 10000 ETH là được, phải chi cái này đồ thiệt thì đã ha, tới đây nghỉ hưu được rồi rồi cần chi <del>lùa gà</del> mần mướn nữa. Nếu cần nhìn trực quan thì có thể dùng ví nào đó như MataMask/ Trust Wallet/ Phantom mở testnet network lên, chọn <a href="http://localhost/">Localhost</a> 8545 rồi import account test vô.</p>
<p><code>Account #0: 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266 (10000 ETH) Private Key: 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80</code></p>
<ul>
<li>Chuyển qua cái terminal 2, chạy:</li>
</ul>
<p><code>npx hardhat console --network localhost</code></p>
<p>Thấy hiện ra vầy là OK:</p>
<p><code>Contract deployed at 0x5FbDB2315678afecb367f032d93F642f64180aa3</code></p>
<p>Tiếp tục chạy lệnh này để mở hardhat console thực hiện việc sinh ra NFT token bằng SimpleERC721 nằm trong contract/contracts/SimpleERC721.sol</p>
<p><code>npx hardhat console --network localhost</code></p>
<p>Trong hardhat console chạy lần lượt, nhớ thay thế &lt;&gt; bằng address vừa hiện ra ở bên trên.</p>
<pre><code></code></pre>
<p>Thấy vầy là OK:</p>
<p><a href="https://raudangdat.files.wordpress.com/2022/01/hardhat-contract-deploy.png"><img src="/assetsraudangdat.files.wordpress.com202201hardhat-contract-deploy.b239ee833f014468e851603bda0ce6de.png" alt="" loading="lazy" width="1011" height="704" /></a></p>
<p>Quay lại MetaMask sẽ thấy đã tốn:</p>
<p><a href="https://raudangdat.files.wordpress.com/2022/01/metamask-localhost8545.png"><img src="/assetsraudangdat.files.wordpress.com202201metamask-localhost8545.1177aa8e244f123292a745b3663edef2.png" alt="" loading="lazy" width="432" height="632" /></a></p>
<p>Nếu nhìn trên terminal 1 (server) cũng sẽ thấy các thông tin thế này</p>
<p><a href="https://raudangdat.files.wordpress.com/2022/01/hardhat-server-terminal.png"><img src="/assetsraudangdat.files.wordpress.com202201hardhat-server-terminal.9d154ecad68f8d6d2253c36e8059863f.png" alt="" loading="lazy" width="1138" height="181" /></a></p>
<h3 id="chạy-thử-trên-ethereum-ropsten-testnet">Chạy thử trên Ethereum Ropsten Testnet</h3>
<p>Đăng nhập vô AWS Console &gt; Managed Blockchain &gt; Networks &gt; Ethereum Testnet Ropsten &gt; tạo một node &gt; copy HTTP Endpoint để thế vô lệnh này. Hết sức chú ý là phải có https nữa nha, tui gặp lỗi mò đã đời mới biết.</p>
<p><code>export AMB_HTTP_ENDPOINT='&lt;my-endpoint&gt;'</code></p>
<p>Tiếp tục tạo account để phục vụ cho việc deploy contract, đại khái acc này như là 20 acc có sẵn 10K ETH ở trên vậy nhưng có điều mới tạo thì không có đồng ETH nào nên muốn trả phí gas khi deploy thì giờ phải đi kiếm mấy cái Ropsten Faucet để gửi ít rETH vào ví. Cứ Google, nhiều trang làm được việc này, có trang thì dễ, có trang thì bắt phải giải captcha mới gửi cho.</p>
<p><code>npx hardhat account</code></p>
<p>Lấy thông tin vừa chạy ở trên bỏ vô đây</p>
<p><code>export PRIVATE_KEY='&lt;0x...&gt;'</code></p>
<p>Tiếp đến quay lại AWS Console vào Identity and Access Management (IAM) để tạo access key và scret access key. Chú ý là IAM bản cũ, chứ IAMv2 thì click nút Manage access keys để nó qua bản cũ nhe. Có thông tin thì điền vô đây:</p>
<p><code>export AWS_ACCESS_KEY_ID='&lt;...&gt;' export AWS_SECRET_ACCESS_KEY='&lt;...&gt;'</code></p>
<p>Chạy lệnh này để deploy với Amazon Managed Blockchain. (1).<code>npx hardhat run --network amb scripts/deploy-amb.js</code></p>
<p>Vì thư viện @aws\web3-http-provider\index.js đang để mặc định là us-east-1 nên nếu đang ở region khác sẽ gặp lỗi, cần phải set lại như bên dưới. Xong thì chạy lại file deploy-amb.js ở trên là được, thành công sẽ gặp dòng “Contract deployed at” và bị trừ tiền gas.</p>
<p><code>export AWS_DEFAULT_REGION='&lt;your-region&gt;'</code></p>
<h2 id="3-deploy-api-cho-backend">3. Deploy API cho Backend</h2>
<p>Cài đặt AWS CDK</p>
<p><code>npm install -g aws-cdk</code></p>
<p>Các lệnh bên dưới sẽ chạy trong thư mục /provision</p>
<p><code>npm install</code></p>
<p><code>export CONTRACT_ADDRESS='&lt;contract ở (1)&gt;'</code></p>
<p><code>cdk bootstrap</code></p>
<p>Chạy lệnh trên thì thằng CloudFormation sẽ tạo 1 stack là CDKToolkit để chuẩn bị cho việc deploy.</p>
<p><strong>Environment aws://*\</strong>/ap-southeast-1 bootstrapped.**</p>
<p>Chạy 3 lệnh này để vào-install dependencies-quay lại:</p>
<p><code>cd lambda; npm install; cd -;</code></p>
<p>Copy complied contract (SimpleERC721.json) vào /lambda/contracts/</p>
<p><code>cp ../contract/artifacts/contracts/SimpleERC721.sol/SimpleERC721.json lambda/contracts/.</code></p>
<p>Build CDK</p>
<p><code>npm run build</code></p>
<p>Check lại coi mấy biến môi trường set đúng chưa</p>
<p><code>echo $AMB_HTTP_ENDPOINT</code></p>
<p><code>echo $CONTRACT_ADDRESS</code></p>
<p>OK thì deploy, CloudFormation tiếp tục tạo stack SimpleNftMarketplaceStack.</p>
<p><code>cdk deploy SimpleNftMarketplaceStack</code></p>
<p>Như đã nói ngay khúc mở đầu, không chịu update Nodejs lên đúng phiên bản CDK được hỗ trợ nên gặp đủ thứ lỗi trời ơi đất hỡi ngay khúc giữa không, mà lúc đó lỡ làm rồi nên lại làm biếng làm lại từ đầu 😂</p>
<p>Số là đoạn này tui gặp lỗi vầy từ chiều, xong tui mò hoài không ra nên thôi tui đi ún gụ. Sau khi sin sỉn về vì chưa bù ngủ nên thôi tui mở máy lên tiếp rồi gõ tùm lum gì đó trong ba bốn cái terminal vừa mở ra, giờ chả nhớ đã gõ cái gì, vẫn không chạy được, thế là copy error log Google đại thì thấy trên Stackoverflow có ông nào đó trả lời về cái lỗi này cách đây 3 năm trước dù rằng nhìn đề bài thì có vẻ tay hỏi đang xài electron-builder gì đó, chưa kịp suy nghĩ coi có đúng cái mình cần không nữa, tui copy và paste vô đại, ai dè hết thấy lỗi, xong cái chạy CDK Deploy enter một phát được như là các thánh IT trong những đền thờ các huyền thoại vậy.</p>
<p>Trời đất quỷ thần thiên địa ơi, ghê vậy trời! 🤣</p>
<p>Nói chứ, lỗi vầy thì đúng là liên quan đến cục electron rồi.</p>
<p><code>Error: EACCES: permission denied, stat '/root/.cache/electron/8c5c987a73913c5646db497de9f6f9676033aa1586938d0d2c9cac8ac37f7e20/electron-v15.3.2-linux-x64.zip'</code></p>
<p>Vậy nên coi ở đây <a href="https://stackoverflow.com/questions/51469367/electron-builder-eacces-permission-denied"></a><a href="https://stackoverflow.com/questions/51469367/electron-builder-eacces-permission-denied">https://stackoverflow.com/questions/51469367/electron-builder-eacces-permission-denied</a> rồi cọp 2 lệnh này chạy, xong chạy lại cái cdk deploy là OK. Tuyệt vời phải không nào, cảm ơn Internet, cảm ơn ai đã mang Stackoverflow đến với thế giới loài người.</p>
<p><code>sudo npm uninstall -g electron</code></p>
<p><code>sudo npm install -g electron --unsafe-perm=true --allow-root</code></p>
<p>Sau khi chạy thành công thì sẽ có Output thế này <code>SimpleNftMarketplaceStack.NftApiEndpoint = https://***.execute-api.ap-southeast-1.amazonaws.com/prod/ SimpleNftMarketplaceStack.NftApiEndpoint8C6C6AD5 = https://***.execute-api.ap-southeast-1.amazonaws.com/prod/ SimpleNftMarketplaceStack.UserPoolClientId = *** SimpleNftMarketplaceStack.UserPoolId = ap-southeast-1*** Stack ARN: arn:aws:cloudformation:ap-southeast-1:***:stack/SimpleNftMarketplaceStack/***</code></p>
<h1 id="4-frontend">4. Frontend</h1>
<p>Phần này nằm trong thư mục /marketplace.</p>
<p>Chuyển vô thư mục /marketplace rồi set các biến môi trường như bên dưới.</p>
<pre><code>cat &lt;&lt;EOF &gt; .env.local
VUE_APP_AWS_REGION=&lt;region&gt;
VUE_APP_API_ENDPOINT=&lt;api-endpoint&gt;
VUE_APP_USER_POOL_ID=&lt;user-pool&gt;
VUE_APP_USER_POOL_WEB_CLIENT_ID=&lt;web-client&gt;
EOF</code></pre>
<p><code>sudo npm install</code></p>
<p>Không hiểu mình chạy thì lỗi “npm ERR! Response timeout while trying to fetch <a href="https://registry.npmjs.org/fs-extra"></a><a href="https://registry.npmjs.org/fs-extra">https://registry.npmjs.org/fs-extra</a> (over 30000ms)” nên phải</p>
<p><code>npm set timeout=100000</code></p>
<p>Sau đó thì phải chạy lệnh dưới để cho sạch chứ không thì lỗi “Unexpected end of JSON input while parsing near” nhìn rất là huyền bí.</p>
<p><code>npm cache clean --force</code></p>
<p>Giờ thì chạy OK rồi đó, hơi chậm. Chạy tiếp cái này</p>
<p><code>sudo npm run serve</code></p>
<p>Trường hợp lỗi liên quan đến vue-cli-service thì cài thêm dependence rồi chạy lại npm run serve.</p>
<p><code>npm i @vue/cli-service</code></p>
<p>Thấy báo địa chỉ Local với Network là OK, lấy browser mở ra vầy là coi như OK lần 2.</p>
<p><a href="https://raudangdat.files.wordpress.com/2022/01/nft-marketplace-frontend.png"><img src="/assetsraudangdat.files.wordpress.com202201nft-marketplace-frontend.87f482b7ed1e808ebc3925cec59f2c04.png" alt="" loading="lazy" width="650" height="615" /></a></p>
<p>Anh Dũng. Photo by <a href="https://unsplash.com/@theshubhamdhage?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Shubham Dhage</a> on <a href="https://unsplash.com/s/photos/blockchain?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p>
<!--EndFragment-->]]>
    </content>
    <link href="https://cecilapp.github.io/the-butler/blog/trien-khai-giai-phap-nfts-marketplace-tren-ha-tang-aws-sieu-nhanh/" rel="alternate" type="text/html" />
    <published>2022-02-06T03:27:02+01:00</published>
    <updated>2022-02-06T03:27:02+01:00</updated>
  </entry>
  <entry xml:lang="en">
    <id>https://cecilapp.github.io/the-butler/blog/cai-dat-node-js-phien-ban-moi-nhat-tren-ubuntu-wsl2/</id>
    <title>Cài đặt Node.js phiên bản &quot;mới nhất&quot; trên Ubuntu WSL2</title>
    <content type="html">
      <![CDATA[<p>Mặc định nếu cài đặt một cách truyền thống bằng lệnh sudo apt install nodejs thì chỉ có phiên bản 10.x, lý do vì đây là phiên bản “mới nhất” là thằng package manager apt này có được.</p>
<p>Trong khi hiện tại, trên trang chủ thì bản LTS là 16.x, có nhiều cách để cài bản mới nhất thiệt sự từ trang chủ, và đây là một trong những cách dễ nhất:</p>
<p><code>cd ~</code></p>
<p><code>curl -sL https://deb.nodesource.com/setup_16.x-o nodesource_setup.sh</code></p>
<p><code>sudo bash nodesource_setup.sh</code></p>
<p><code>sudo apt install nodejs</code></p>
<p>Xong, chỉ vậy thôi! Để kiểm tra coi phiên bản nào thì chạy</p>
<p><code>node -v</code></p>]]>
    </content>
    <link href="https://cecilapp.github.io/the-butler/blog/cai-dat-node-js-phien-ban-moi-nhat-tren-ubuntu-wsl2/" rel="alternate" type="text/html" />
    <published>2022-01-16T22:27:12+01:00</published>
    <updated>2022-01-16T22:27:12+01:00</updated>
  </entry>
  <entry xml:lang="en">
    <id>https://cecilapp.github.io/the-butler/blog/kinh-nghiem-thi-aws-certified-solutions-architect-associate-saa-c02/</id>
    <title>Kinh nghiệm thi AWS Certified Solutions Architect – Associate (SAA-C02)</title>
    <content type="html">
      <![CDATA[<!--StartFragment-->
<p>Tưởng tượng mớ kiến thức học mấy tháng qua y chang như là dưa kiệu ngâm ăn Tết vậy đó, mới làm xong nhận vô trong hủ thì ăn liền không có được vì nó chưa có thấm, chưa mềm, chưa lên men đủ… bla bla bla. Thành ra làm Practice Test mà không ổn thì nên nghỉ ngơi mấy bữa, chả buồn đụng tới thì mọi thứ có vẻ bắt đầu ổn dần, nhưng cũng đừng để lâu quá chua lét khỏi ăn nha!</p>
<!--EndFragment-->
<!-- excerpt -->
<!--StartFragment-->
<p>Tui mới thi xong nên biên mấy dòng trước là để ghi lại kỷ niệm lâu rồi mới ngồi lại học hành một cách gần gần nghiêm chỉnh, sau là để chia sẻ thêm thông tin với bà con.</p>
<h2 id="có-cần-mua-dump-không">Có cần mua dump không?</h2>
<p>Không cần!</p>
<p>Ban đầu cũng khá cân nhắc mấy chỗ như kiểu skillcertpro hoặc mấy ông bán dump bao đậu trên FB, mà thiệt tình là nhìn hên xui may rủi quá, không biết gốc gác từ đâu ra, coi một số dump mẫu trước khi mua thì phần giải thích đáp án khá sơ sài, chưa kể đề thi cũng updated hoài chứ đâu có như Tứ thư Ngũ kinh. Còn lý do chính là tui nhận ra tui hiện tại không thể học thuộc lòng nổi nữa rồi, vì có quá nhiều dịch vụ/ tình huống cần phải nhớ rồi. Nếu có thể nhớ hết được thì chắc là dump cũng có lợi.</p>
<p>Thiên hạ khen chê đủ kiểu:</p>
<h2 id="nên-đăng-ký-tài-khoản-aws-để-thực-hành-không">Nên đăng ký tài khoản AWS để thực hành không?</h2>
<p>Nên!</p>
<p>Chắc chắn là rất nên. Ban đầu, để đỡ mất thời gian cũng như suy nghĩ thiển cận rằng làm thiệt mà không để ý free tier thì mắc công bị charge tiền nữa nên hầu như tui đều bỏ qua hết mấy phần Hands On và hậu quả là sau khi đi luyện mấy bài Practice Test có nhiều câu tui làm sai tới 4 lần luôn, đỉnh cao tới mức đã ghi lại, vẽ mind map mà do quá nhiều thứ để nhớ nên cuối cùng không thể nhớ nỗi thứ đó là thứ nào.</p>
<p>Và cuối cùng thì phần nào mà không cách nào nhớ nỗi tui đi kiếm sample/ tutorial coi để thực hành lại, nhìn thấy được kết quả thiệt nó chạy thế nào sau khi mình lắp ghép mớ đồ hàng của AWS chính là cách tốt nhất để nhớ dịch vụ đó nó làm cái gì, gắn với cái gì trong tình huống nào.</p>
<p>Sau khi làm Hands On xong thì nhớ dọn dẹp sạch sẽ là được. Để an tâm hơn thì cũng nên set Billing Budgets cho khỏi lo xài quá trớn.</p>
<h2 id="tui-đã-luyện-bằng-cách-nào">Tui đã luyện bằng cách nào?</h2>
<ul>
<li>Học trên Udemy: khóa Ultimate AWS Certified Solutions Architect Associate 2021 (giờ thấy đã cập nhật lên 2022 rồi) của Stephane Maarek: <a href="https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c02/"></a><a href="https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c02/">https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c02/</a></li>
<li>Luyện thêm khóa Practice bằng khóa Practice Exams | AWS Certified Solutions Architect Associate (<a href="https://www.udemy.com/course/practice-exams-aws-certified-solutions-architect-associate/"></a><a href="https://www.udemy.com/course/practice-exams-aws-certified-solutions-architect-associate/">https://www.udemy.com/course/practice-exams-aws-certified-solutions-architect-associate/</a>). Tui thấy khóa này khá ổn, cover đầy đủ kiến thức để đi thi, mấy bài Parctice giải thích đáp án cũng rất rõ ràng, chịu khó đọc hết là được, chưa kể là có update thường xuyên. Ngoài ra còn coi lẻ tẻ ở <a href="http://examptopics.com/">examptopics.com</a> cũng như là khóa AWS Certified Solutions Architect Associate Practice Tests (SAA-C02) + Exam Simulator + Explanations + AWS Cheat Sheets của Neal Davis cũng trên Udemy.</li>
<li>Ghi notes, vẽ mind map. Tui share cái mind map của tui ở đây, chắc chắn là ở trỏng còn sai tè le, đừng có tin nha.</li>
<li>Thực hành thực tế lại những phần không hiểu, câu nào làm sai vài ba lần thì lôi mấy cái services ở trong ra đem hands on đúng tình huống trong câu hỏi đó luôn.</li>
</ul>
<h2 id="đăng-ký-thi-kiểu-gì">Đăng ký thi kiểu gì?</h2>
<p>AWS họ có 2 đối tác khảo thí là PSI và Pearson VUE, cả 2 chỗ này đều có 2 hình thức là thi tại trung tâm liên kết (Testing Center) và thi online (Online Proctor), do đã có <a href="https://anhdung.me/2022/01/09/trai-nghiem-dang-ky-pearson-vue-online-proctor-thi-aws/">trải nghiệm khá là ba trợn với Pearson VUE online</a> nên sau khi được refund tui quyết định quay về với truyền thống, đăng ký thi ở Testing Center là partner với Pearson VUE (chọn Pearson VUE là vì cứ tưởng hơn PSI được 10p ai dè tới chừng vô thi mới biết 10p đó để làm survey sau khi thi xong, đúng là đánh lận con đen thiệt chớ).</p>
<p>Tất nhiên, lần tới nữa nếu có điều kiện thì tui vẫn muốn thử Online Proctor coi thế nào, còn đây là những cái lợi nếu ở Testing Center mà Online Proctor không có được:</p>
<ul>
<li>Không phải lo lắng việc check-in, ở xứ mình thì chỉ cần cầm theo CMND/ CCCD là được, điền tên ký tên bằng mẹ đẻ hết. Ngược lại thì: nếu Testing Center ở xa quá thì mắc công lo kẹt xe, đi lại các kiểu, tuy nhiên ở xứ mình nếu việc đi Sài Gòn, Đà Nẵng, Hà Nội không thành vấn đề với bạn thì cũng chẳng có gì phải lo luôn.</li>
<li>Mấy cái Testing Center cơ sở vật chất khá ổn, thậm chí mình còn coi được hình phòng thi trước nếu quá lo lắng máy móc không quen.</li>
<li>Khỏi lo dọn dẹp cái bàn để thi, cũng như là việc có ai đó vô tình kêu mình hoặc là bà bán cá đầu xóm bỗng dưng xắn quần lên chửi ông bán trứng um sùm. Thấy nhiều người review giám thị online bắt họ dẹp cả máy PS cùng mấy thứ linh tinh khác nữa.</li>
<li>Không như thi Online thì bị bắt nhìn chầm chầm thẳng vô Webcam, không được liếc chỗ khác, không được rời khỏi webcam trong suốt thời gian thi, không được dùng tay che miệng, không đọc câu hỏi thì thầm… bla bla bla… Khá là khó nhưng kể ra cũng đúng, tại giám thị online chỉ nhìn được qua mỗi cái webcam thôi.</li>
<li>Và quan trọng là khi có sự cố (như máy tính ngủm củ tỏi, ve chai cắt dây mạng bán đồng nát…) thì ít ra ngay lúc đó có người xử lý/ giải quyết/ hoặc ghi nhận sự việc chứ không có nói kiểu “Lỗi mạng” mà chả biết mạng ai lỗi. Tất nhiên, có một điều chắc chắn rằng mọi thứ đều không chắc chắn, nên thôi lo quá cũng chả làm được gì.</li>
</ul>
<h2 id="có-tips-nào-không">Có tips nào không?</h2>
<p>Có!</p>
<ul>
<li>Phải nhìn ra các từ khóa trong câu hỏi như là: minimize the costs, managed services, high read/ disaster recovery, reusable, SaaS… để xác định được tình huống cần giải quyết, loại bỏ các phương án không cần thiết cho đỡ mất thời gian.</li>
<li>Có nhiều tình huống đáp án khá là đơn giản, đừng thần thánh hóa giải pháp làm gì cho sai.</li>
<li>Tham gia cộng đồng nào đó có cùng mục tiêu với mình, đọc mấy kinh nghiệm của người vừa thi xong cũng đỡ bỡ ngỡ. Có khá nhiều cộng đồng như vậy trên Facebook Group, Reddit thậm chí cả Telegram nữa.</li>
<li>Tìm được ai/ hoặc nhóm học chung và có thời gian cố định hàng tuần thì rất hữu ích để chống lại sự làm biếng.</li>
<li>Nhớ request ESL trước khi thi để được thêm 30p, tổng cộng là 160p cũng đỡ lắm. Cái này ai cũng biết nhưng hay quên hoặc là chưa được Approve mà đã đăng ký thi!</li>
<li>Tưởng tượng mớ kiến thức học mấy tháng qua y chang như là dưa kiệu ngâm ăn Tết vậy đó, mới làm xong nhận vô trong hủ thì ăn liền không có được vì nó chưa có thấm, chưa mềm, chưa lên men đủ… bla bla bla. Thành ra làm Practice Test mà không ổn thì nên nghỉ ngơi mấy bữa, chả buồn đụng tới thì mọi thứ có vẻ bắt đầu ổn dần, nhưng cũng đừng để lâu quá chua lét khỏi ăn nha!</li>
</ul>
<!--EndFragment-->]]>
    </content>
    <link href="https://cecilapp.github.io/the-butler/blog/kinh-nghiem-thi-aws-certified-solutions-architect-associate-saa-c02/" rel="alternate" type="text/html" />
    <published>2022-01-09T18:51:46+01:00</published>
    <updated>2022-01-09T18:51:46+01:00</updated>
  </entry>
  <entry xml:lang="en">
    <id>https://cecilapp.github.io/the-butler/blog/trai-nghiem-dang-ky-pearson-vue-online-proctor-thi-aws/</id>
    <title>Trải nghiệm đăng ký Pearson VUE Online Proctor thi AWS</title>
    <content type="html">
      <![CDATA[<p>Tui đẻ ra ở thời Web 1.0 rồi lớn lên đi mần, kiếm ăn nhờ Web 2.0, bây giờ là kỷ nguyên Web 3.0 của metaverse gì gì đó nên tui rất có niềm tin vào mọi thứ sẽ được “trực tuyến hóa” một cách tuyệt vời. Nhưng rồi sau trải nghiệm tồi tệ lần đầu tiên, cũng như thấy được cơ số chuyện ba trợn xảy đến với mọi người nên thôi tui quyết định quay về với truyền thống, đăng ký thi ở Testing Center…</p>
<!-- excerpt -->
<!--StartFragment-->
<p>Tui còn nhớ bữa đó làm xong bài thi thử thấy kết quả đủ PASS nên lật đật bay vô đăng ký thi thiệt luôn ngay trong đêm để cho kịp cái hên, trong bụng còn tính coi có ca thi nào sớm nhất thì đăng ký luôn khỏi cần tắm rửa chi ráo để giữ cái hên mới làm xong bài test hồi nãy.</p>
<p>Chuyện là…</p>
<p>AWS họ có 2 đối tác khảo thí là PSI và Pearson VUE, coi thử 2 bên thì thấy PSI thua 10 phút, với bữa mới thấy topic trên Reddit kêu Do not use PSI testing nữa nên tất nhiên mặc định Pearson VUE ngon lành rồi, đăng ký ngay và luôn thôi. OK, xong, mọi thứ hoàn toàn tự động hóa thật tuyệt vời.</p>
<p>Tối đó, tui chạy test session trước, mọi thứ vẫn rất tuyệt vời, rồi dọn dẹp bàn ghế các kiểu, cất bớt điện thoại, thiết bị điện tử khác, giấy tờ sổ sách trên bàn… còn mấy cái màn hình lỡ gắn vô arm rồi nên khá là nan giải, định bụng sẽ trùm lại hoặc hỏi giám thị. Lịch thi bảo mở cổng check-in trước giờ thi 30p thì 45p trước đó là tui đã ngồi F5 từ từ luôn, không biết có phải tại tui bấm F5 nhiều quá mà làm hệ thống ngủm củ tỏi không nữa, nhưng ngạc nhiên chưa kìa: hệ thống thi ngủm thiệt.</p>
<p>Thử đi thử lại mấy lần toàn báo lỗi ngay chỗ màn hình Network check 75%, coi chi tiết thì biết được là không kết nối được tới một dịch vụ nào đó của Wowza, chèn ơi hết gần 10p bà nó của tui rồi mà chưa check-in được, trong khi cái app OnVUE này nó dùng công nghệ đỉnh cao gì đó mà mỗi lần load cũng tốn hết mấy chục giây của tui, chưa kể trước đó còn phải đánh vật để tắt cái process dbxsvc nữa trong khi hồi chạy test thì không thấy nói năng gì. Và tui đã cẩn thận tới mức hồi chạy test OK xong là không tắt máy, không dám nhúc nhích cái laptop luôn.</p>
<p>OK, dù sao thì phận end-user mà, bằng mọi giá phải check-in được để vô thi chứ, 150 Biden cùng mấy tháng trời từ bỏ mọi lạc thú trần gian chạy tịnh gìn giữ tiết hạnh để ôn luyện mà. Tui đổi qua cái máy khác, đổi luôn line Internet khác, cũng không được thì đổi qua tới 4G Mobifone, rồi tới 4G I-Tel, rồi để chắc ăn ăn hơn trong trường hợp toàn cõi An Nam tự nhiên chặn bọn Wowza vì lý do trời ơi nào đó nên tui thử cả VPN ở nước khác. Cũng không được luôn, lúc này chỉ còn 1 phút nữa là hết giờ check-in!</p>
<p>Tâm trạng hết sức rối bời, thất vọng cùng cực tui chat với Support thì gặp được con Bot hết sức lịch sự hỏi tên, hỏi ID, số điện thoại đồ rồi kêu tui đợi để nó đi kiếm con người. Với bản tính là con người nên tất nhiên không phải đồng loại thì tui càng nghi ngờ hơn, nên làm sao tui tin được con Bot này, tui quay qua máy khác kiếm Support, cũng gặp tiếp Bot. Đợi mấy chục phút và dòm màn hình trong tuyệt vọng và lúc này mới cảm thấy tự động hóa thật kinh hoàng, dù rằng mới mấy tiếng trước tui còn thấy nó tuyệt vời thế nào.</p>
<p>Lần mò một hơi tui mới kiếm ra chỗ để gửi mail bày tỏ nỗi thất vọng và tức thì nhận được cái mail Automatic reply càng làm tui ức chế tợn, còn số điện thoại thì tất nhiên là xứ ta không có line riêng rồi, bên Úc sẽ lo mà đêm hôm giờ thì làm gì còn ai trực điện thoại nữa.</p>
<p>Lúc đó bực nhất là khi mà tui tưởng tượng thi online với giám thị ở tận xứ nào đó trên trái đất này làm cho khá lo lắng và bỏ công chuẩn bị đủ thứ, cuối cùng thì vì một cái lỗi ất ơ nào đó của một cái hệ thống khỉ gió trong cái quy trình nhì nhằng làm tui chả biết mình đang bị cái củ-cải gì đó với mấy dòng thông báo lỗi chung chung vô hồn, cơ quan chủ quản thì im ru, không email, không chat, không thông báo để mọi người phải lên mạng xã hội chửi, dạo vòng vòng thì hóa ra cũng đầy người như mình từ nhiều quốc gia khác nhau. Ai đời đối tác khảo thí một cái môn để làm những giải pháp hạ tầng với những từ khóa mỹ miều như là always on, disaster recovery, high availability… bla bla bla… Cùng cam kết dịch vụ (SLA) cao nhất mà một trong số các services của họ lại ngủm củ tỏi, không một lời thông báo, không một con người nào trả lời email, chat support. Chỉ toàn những cái email hay Help Bot với tiêu đề “Automatic reply” vô hồn phản hồi ngay lập tức và sau vài tiếng đồng hồ chờ đợi trong vô vọng, càng làm cho mọi người càng bực bội hơn nữa.</p>
<p>Nhưng dù sao, tạm bỏ qua những điều ức chế bên trên thì mặt khác cũng cho tui được trải nghiệm rằng mọi cam kết về dịch vụ chỉ là cam kết thôi, còn chết thì phải chết làm sao mà tránh khỏi được. Có một điều chắc chắn rằng mọi thứ đều không chắc chắn mà :))</p>
<p>Sau hơn 4 tiếng đồng hồ bị sự cố thì cuối cùng Pearson VUE cũng có email báo lại họ “gặp khó khăn về mặt kỹ thuật” và bảo sẽ cancel lịch thi cũng như refund.</p>
<p>Tui đẻ ra ở thời Web 1.0 rồi lớn lên đi mần, kiếm ăn nhờ Web 2.0, bây giờ là kỷ nguyên Web 3.0 của metaverse gì gì đó nên tui rất có niềm tin vào mọi thứ sẽ được “trực tuyến hóa” một cách tuyệt vời. Nhưng rồi sau trải nghiệm tồi tệ lần đầu tiên, cũng như thấy được cơ số chuyện ba trợn xảy đến với mọi người nên thôi tui quyết định quay về với truyền thống, đăng ký thi ở Testing Center vì ngoài trải nghiệm tồi tệ vừa rồi thì dạo dạo trên mạng thấy cũng có nhiều người than phiền:</p>
<ul>
<li>Một sự trùng hợp ngẫu nhiên chưa được thống kê từ rất nhiều thành viên trên Reddit cho rằng mặc dù là 24/7 nhưng nếu đặt lịch thi vào cuối tuần hoặc khuya lơ khuya lắc thì mấy tay proctor có vẻ khá khó tính. <a href="https://www.reddit.com/r/AWSCertifications/comments/q0fu4t/comment/hf9mzju/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3"></a><a href="https://www.reddit.com/r/AWSCertifications/comments/q0fu4t/comment/hf9mzju/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3">https://www.reddit.com/r/AWSCertifications/comments/q0fu4t/comment/hf9mzju/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3</a></li>
<li>Đang thi xui xui Dropbox nó mở process lên là a-lê-hấp vi phạm quy định nhé bấy-bì! Ơ thế cái app OnVue để làm cái khỉ khô gì mà không control được, hoặc yêu cầu reset luôn OS trước khi bắt đầu thi đi. <a href="https://www.reddit.com/r/AWSCertifications/comments/q0fu4t/comment/hf7s9aa/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3"></a><a href="https://www.reddit.com/r/AWSCertifications/comments/q0fu4t/comment/hf7s9aa/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3">https://www.reddit.com/r/AWSCertifications/comments/q0fu4t/comment/hf7s9aa/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3</a></li>
<li>Nửa năm trước họ cũng gặp “gặp khó khăn về mặt kỹ thuật” y chang lần này: <a href="https://www.reddit.com/r/CompTIA/comments/p19ib9/anybody_else_have_technical_issues_with_onvue/"></a><a href="https://www.reddit.com/r/CompTIA/comments/p19ib9/anybody_else_have_technical_issues_with_onvue/">https://www.reddit.com/r/CompTIA/comments/p19ib9/anybody_else_have_technical_issues_with_onvue/</a></li>
</ul>
<p>Kế hoạch chốt năm bằng cái chứng chỉ AWS không kịp thực hiện, qua tuần sau thì tui đăng ký ở Testing Center.</p>
<p>Ban đầu thấy review của mấy bạn Tây nói tới testing center thì dễ bị stresses hơn, do không khí phòng thi, do khác cái bàn quen thuộc… Nhưng hình như với mình thì lại thấy dễ chịu hơn, đôi khi còn cảm giác thú vị vì được sống lại cái không khí của chục năm về trước, âu chắc cũng là một trong những lợi thế hiếm hoi của dân châu Á bị ép học hành với thi cử liên miên hồi còn nhỏ.</p>
<p>Ở Testing Center thì mọi thứ khá suôn sẻ, thậm chí còn được alo hỏi có muốn thi sớm hông vì cán bộ phòng thi mắc đi chích mũi 3.</p>
<p><em>Photo by <a href="https://unsplash.com/@jeshoots?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">JESHOOTS.COM</a> on <a href="https://unsplash.com/s/photos/online-exam?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em>
<em>.</em></p>
<!--EndFragment-->]]>
    </content>
    <link href="https://cecilapp.github.io/the-butler/blog/trai-nghiem-dang-ky-pearson-vue-online-proctor-thi-aws/" rel="alternate" type="text/html" />
    <published>2022-01-09T06:32:58+01:00</published>
    <updated>2022-01-09T06:32:58+01:00</updated>
  </entry>
  <entry xml:lang="en">
    <id>https://cecilapp.github.io/the-butler/blog/princess-mononoke/</id>
    <title>Thử nghiệm Princess Mononoke</title>
    <content type="html">
      <![CDATA[<p><strong><em>Princess Mononoke</em></strong> (<a href="https://en.m.wikipedia.org/wiki/Japanese_language">Japanese</a>: もののけ姫 <a href="https://en.m.wikipedia.org/wiki/Hepburn_romanization">Hepburn</a>: <strong>Mononoke-<a href="https://en.m.wikipedia.org/wiki/Hime">hime</a></strong>, &quot;Spirit/Monster Princess&quot;) is a 1997 Japanese <a href="https://en.m.wikipedia.org/wiki/Anime">animated</a> <a href="https://en.m.wikipedia.org/wiki/Fantasy_film">fantasy film</a> written and directed by <a href="https://en.m.wikipedia.org/wiki/Hayao_Miyazaki">Hayao Miyazaki</a>, animated by <a href="https://en.m.wikipedia.org/wiki/Studio_Ghibli">Studio Ghibli</a> for <a href="https://en.m.wikipedia.org/wiki/Tokuma_Shoten">Tokuma Shoten</a>, <a href="https://en.m.wikipedia.org/wiki/Nippon_Television_Network">Nippon Television Network</a> and <a href="https://en.m.wikipedia.org/wiki/Dentsu">Dentsu</a>, and distributed by <a href="https://en.m.wikipedia.org/wiki/Toho">Toho</a>. The film stars the voices of <a href="https://en.m.wikipedia.org/wiki/Yōji_Matsuda">Yōji Matsuda</a>, <a href="https://en.m.wikipedia.org/wiki/Yuriko_Ishida">Yuriko Ishida</a>, <a href="https://en.m.wikipedia.org/wiki/Yūko_Tanaka">Yūko Tanaka</a>, <a href="https://en.m.wikipedia.org/wiki/Kaoru_Kobayashi_(actor)">Kaoru Kobayashi</a>, <a href="https://en.m.wikipedia.org/wiki/Masahiko_Nishimura">Masahiko Nishimura</a>, <a href="https://en.m.wikipedia.org/wiki/Tsunehiko_Kamijo">Tsunehiko Kamijo</a>, <a href="https://en.m.wikipedia.org/wiki/Akihiro_Miwa">Akihiro Miwa</a>, <a href="https://en.m.wikipedia.org/wiki/Mitsuko_Mori">Mitsuko Mori</a> and <a href="https://en.m.wikipedia.org/wiki/Hisaya_Morishige">Hisaya Morishige</a>.</p>
<!-- excerpt -->
<p><em>Princess Mononoke</em> is set in the late <a href="https://en.m.wikipedia.org/wiki/Muromachi_period">Muromachi period</a> (approximately 1336 to 1573) of Japan with fantasy elements. The story follows the young <a href="https://en.m.wikipedia.org/wiki/Emishi">Emishi</a> prince Ashitaka's involvement in a struggle between the gods of a forest and the humans who consume its resources. The term &quot;<a href="https://en.m.wikipedia.org/wiki/Mononoke">Mononoke</a>&quot; (<a href="https://en.wiktionary.org/wiki/物の怪">物の怪</a>) or もののけ is not a name, but a Japanese word for a spirit or monster: supernatural, shape-shifting beings.</p>
<p>The film was released in Japan on July 12, 1997, and in the United States on October 29, 1999. It was a critical and commercial <a href="https://en.m.wikipedia.org/wiki/Blockbuster_(entertainment)">blockbuster</a>, becoming the highest-grossing film in Japan of 1997, and also held Japan's box office record for domestic films until 2001's <em><a href="https://en.m.wikipedia.org/wiki/Spirited_Away">Spirited Away</a></em>, another Miyazaki film. It was <a href="https://en.m.wikipedia.org/wiki/Dubbing_(filmmaking)">dubbed</a> into English and distributed in North America by <a href="https://en.m.wikipedia.org/wiki/Miramax">Miramax</a>, and despite a poor box office performance there, it sold well on DVD and video, greatly increasing Ghibli's popularity and influence outside Japan.</p>
<blockquote>
<p>Source: <a href="https://en.m.wikipedia.org/wiki/Princess_Mononoke">https://en.m.wikipedia.org/wiki/Princess_Mononoke</a></p>
</blockquote>]]>
    </content>
    <link href="https://cecilapp.github.io/the-butler/blog/princess-mononoke/" rel="alternate" type="text/html" />
    <published>2020-03-09T01:00:00+01:00</published>
    <updated>2020-03-09T01:00:00+01:00</updated>
  </entry>
  <entry xml:lang="en">
    <id>https://cecilapp.github.io/the-butler/blog/daft-punk/</id>
    <title>Daft Punk</title>
    <content type="html">
      <![CDATA[<p><strong>Daft Punk</strong> is a French <a href="https://en.m.wikipedia.org/wiki/Electronic_music">electronic music</a> duo formed in Paris in 1993 by <a href="https://en.m.wikipedia.org/wiki/Guy-Manuel_de_Homem-Christo">Guy-Manuel de Homem-Christo</a> and <a href="https://en.m.wikipedia.org/wiki/Thomas_Bangalter">Thomas Bangalter</a>. They achieved popularity in the late 1990s as part of the <a href="https://en.m.wikipedia.org/wiki/French_house">French house</a> movement; they also had success in the years following, combining elements of <a href="https://en.m.wikipedia.org/wiki/House_music">house music</a> with <a href="https://en.m.wikipedia.org/wiki/Funk">funk</a>, <a href="https://en.m.wikipedia.org/wiki/Techno">techno</a>, <a href="https://en.m.wikipedia.org/wiki/Disco">disco</a>, rock and <a href="https://en.m.wikipedia.org/wiki/Synthpop">synthpop</a>. They have worn ornate helmets and gloves to assume <a href="https://en.m.wikipedia.org/wiki/Robot">robot</a> personas in most public appearances since 1999 and rarely grant interviews or appear on television. The duo were managed from 1996 to 2008 by <a href="https://en.m.wikipedia.org/wiki/Pedro_Winter">Pedro Winter</a> (also known as Busy P), the head of <a href="https://en.m.wikipedia.org/wiki/Ed_Banger_Records">Ed Banger Records</a>.</p>
<!-- excerpt -->
<p>After Bangalter and Homem-Christo's <a href="https://en.m.wikipedia.org/wiki/Indie_rock">indie rock</a> band <a href="https://en.m.wikipedia.org/wiki/Darlin&#039;_(French_band)">Darlin'</a> disbanded, they began experimenting with <a href="https://en.m.wikipedia.org/wiki/Drum_machine">drum machines</a> and synthesisers. Their debut studio album <em><a href="https://en.m.wikipedia.org/wiki/Homework_(Daft_Punk_album)">Homework</a></em> was released by <a href="https://en.m.wikipedia.org/wiki/Virgin_Records">Virgin Records</a> in 1997 to positive reviews, backed by singles &quot;<a href="https://en.m.wikipedia.org/wiki/Around_the_World_(Daft_Punk_song)">Around the World</a>&quot; and &quot;<a href="https://en.m.wikipedia.org/wiki/Da_Funk">Da Funk</a>&quot;. Their second album, <em><a href="https://en.m.wikipedia.org/wiki/Discovery_(Daft_Punk_album)">Discovery</a>,</em> had further success, supported by hit singles &quot;<a href="https://en.m.wikipedia.org/wiki/One_More_Time_(Daft_Punk_song)">One More Time</a>&quot;, &quot;<a href="https://en.m.wikipedia.org/wiki/Digital_Love_(Daft_Punk_song)">Digital Love</a>&quot; and &quot;<a href="https://en.m.wikipedia.org/wiki/Harder,_Better,_Faster,_Stronger">Harder, Better, Faster, Stronger</a>&quot;. In March 2005, Daft Punk released their third album, <em><a href="https://en.m.wikipedia.org/wiki/Human_After_All">Human After All</a>,</em> to mixed reviews, though the singles &quot;<a href="https://en.m.wikipedia.org/wiki/Robot_Rock_(song)">Robot Rock</a>&quot; and &quot;<a href="https://en.m.wikipedia.org/wiki/Technologic">Technologic</a>&quot; achieved success in the United Kingdom. Daft Punk <a href="https://en.m.wikipedia.org/wiki/Alive_2006/2007">toured throughout 2006 and 2007</a> and released the live album <em><a href="https://en.m.wikipedia.org/wiki/Alive_2007">Alive 2007</a></em>, which won a <a href="https://en.m.wikipedia.org/wiki/Grammy_Award">Grammy Award</a> for <a href="https://en.m.wikipedia.org/wiki/Grammy_Award_for_Best_Electronic/Dance_Album">Best Electronic/Dance Album</a>. They composed the score for the film <em><a href="https://en.m.wikipedia.org/wiki/Tron:_Legacy">Tron: Legacy</a></em>, which was released in 2010 alongside <a href="https://en.m.wikipedia.org/wiki/Tron:_Legacy_(soundtrack)">its soundtrack album</a>.</p>
<p>In 2013, Daft Punk left Virgin for <a href="https://en.m.wikipedia.org/wiki/Columbia_Records">Columbia Records</a>, and released their fourth album, <em><a href="https://en.m.wikipedia.org/wiki/Random_Access_Memories">Random Access Memories</a>,</em> to acclaim; lead single &quot;<a href="https://en.m.wikipedia.org/wiki/Get_Lucky_(Daft_Punk_song)">Get Lucky</a>&quot; reached the top 10 in the charts of 32 countries. <em>Random Access Memories</em> won five Grammy Awards in 2014, including <a href="https://en.m.wikipedia.org/wiki/Grammy_Award_for_Album_of_the_Year">Album of the Year</a> and <a href="https://en.m.wikipedia.org/wiki/Grammy_Award_for_Record_of_the_Year">Record of the Year</a> for &quot;Get Lucky&quot;. In 2016, Daft Punk gained their first number one on the <a href="https://en.m.wikipedia.org/wiki/Billboard_Hot_100"><em>Billboard</em> Hot 100</a> with the song &quot;<a href="https://en.m.wikipedia.org/wiki/Starboy_(song)">Starboy</a>&quot;, a collaboration with <a href="https://en.m.wikipedia.org/wiki/The_Weeknd">The Weeknd</a>. As of 2015, Daft Punk had sold over 12 million albums worldwide.</p>
<blockquote>
<p>Source: <a href="https://en.m.wikipedia.org/wiki/Daft_Punk">https://en.m.wikipedia.org/wiki/Daft_Punk</a></p>
</blockquote>]]>
    </content>
    <link href="https://cecilapp.github.io/the-butler/blog/daft-punk/" rel="alternate" type="text/html" />
    <published>2020-02-05T15:43:00+01:00</published>
    <updated>2020-02-05T15:43:00+01:00</updated>
  </entry>
  <entry xml:lang="en">
    <id>https://cecilapp.github.io/the-butler/blog/doom/</id>
    <title>Doom</title>
    <content type="html">
      <![CDATA[<p><strong><em>Doom</em></strong> (stylized as <strong><em>DOOM</em></strong> or <strong><em>DooM</em></strong> in other media) is a 1993 <a href="https://en.m.wikipedia.org/wiki/First-person_shooter">first-person shooter</a> developed and published by <a href="https://en.m.wikipedia.org/wiki/Id_Software">id Software</a> for <a href="https://en.m.wikipedia.org/wiki/MS-DOS">MS-DOS</a>. Players assume the role of a <a href="https://en.m.wikipedia.org/wiki/Space_marine">space marine</a>, popularly known as &quot;<a href="https://en.m.wikipedia.org/wiki/Doomguy">Doomguy</a>&quot;, fighting his way through hordes of invading <a href="https://en.m.wikipedia.org/wiki/Demon">demons</a> from <a href="https://en.m.wikipedia.org/wiki/Hell">Hell</a>. The first episode, comprising nine levels, was distributed freely as <a href="https://en.m.wikipedia.org/wiki/Shareware">shareware</a> and played by an estimated 15–20 million people within two years; the full game, with two further episodes, was sold via <a href="https://en.m.wikipedia.org/wiki/Mail_order">mail order</a>. An updated version with an additional episode, <em>Ultimate Doom</em>, was released in 1995 and sold at retail.</p>
<!-- excerpt -->
<p>Along with its predecessor <em><a href="https://en.m.wikipedia.org/wiki/Wolfenstein_3D">Wolfenstein 3D</a></em>, <em>Doom</em> helped define the FPS genre and inspired numerous similar games, known as &quot;<a href="https://en.m.wikipedia.org/wiki/Doom_clone"><em>Doom</em> clones</a>&quot;. It is one of the most significant games in <a href="https://en.m.wikipedia.org/wiki/Video_game_history">video game history</a>, and is frequently cited as one of the <a href="https://en.m.wikipedia.org/wiki/Greatest_video_games_of_all_time">greatest games of all time</a>. It pioneered <a href="https://en.m.wikipedia.org/wiki/Online_distribution">online distribution</a> and technologies including <a href="https://en.m.wikipedia.org/wiki/3D_computer_graphics">3D graphics</a>, networked <a href="https://en.m.wikipedia.org/wiki/Multiplayer_video_game">multiplayer gaming</a>, and support for customized <a href="https://en.m.wikipedia.org/wiki/Modification_(video_game)">modifications</a> via packaged files (<a href="https://en.m.wikipedia.org/wiki/Doom_WAD">WADs</a>). Its graphic violence and hellish imagery also made it the <a href="https://en.m.wikipedia.org/wiki/Video_game_controversy">subject of controversy</a>, however.</p>
<p><em>Doom</em> has been <a href="https://en.m.wikipedia.org/wiki/Official_versions_of_Doom">ported to numerous platforms</a>. The <a href="https://en.m.wikipedia.org/wiki/Doom_(franchise)"><em>Doom</em> franchise</a> continued with <em><a href="https://en.m.wikipedia.org/wiki/Doom_II:_Hell_on_Earth">Doom II: Hell on Earth</a></em> (1994) and <a href="https://en.m.wikipedia.org/wiki/Expansion_pack">expansion packs</a> including <em><a href="https://en.m.wikipedia.org/wiki/Master_Levels_for_Doom_II">Master Levels for Doom II</a></em> (1995). The <a href="https://en.m.wikipedia.org/wiki/Source_code">source code</a> was released in 1997, inspiring further adaptations. Id returned to the franchise with <em><a href="https://en.m.wikipedia.org/wiki/Doom_3">Doom 3</a></em> (2004), a horror-focused retelling using the <a href="https://en.m.wikipedia.org/wiki/Id_Tech_4">id Tech 4</a> engine, followed by a 2005 <a href="https://en.m.wikipedia.org/wiki/Doom_(film)"><em>Doom</em> film</a>. A 2016 reboot also titled <em><a href="https://en.m.wikipedia.org/wiki/Doom_(2016_video_game)">Doom</a>,</em> powered by <a href="https://en.m.wikipedia.org/wiki/Id_Tech_6">id Tech 6</a>, returned to the fast-paced action of the first games.</p>
<blockquote>
<p>Source: <a href="https://en.m.wikipedia.org/wiki/Doom_(1993_video_game">https://en.m.wikipedia.org/wiki/Doom_(1993_video_game</a>)</p>
</blockquote>]]>
    </content>
    <link href="https://cecilapp.github.io/the-butler/blog/doom/" rel="alternate" type="text/html" />
    <published>2019-12-14T01:00:00+01:00</published>
    <updated>2019-12-14T01:00:00+01:00</updated>
  </entry>
</feed>
